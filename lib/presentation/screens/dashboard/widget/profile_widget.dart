import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:time_tracking_dashboard/di/git_it.dart';import 'package:time_tracking_dashboard/presentation/blocs/choose_time_period/choose_time_period_cubit.dart';import 'package:time_tracking_dashboard/presentation/layouts/custom_profile_card.dart';import 'package:time_tracking_dashboard/presentation/screens/dashboard/widget/time_tab_item_widget.dart';import 'package:time_tracking_dashboard/presentation/themes/custom_themes.dart';class ProfileWidget extends StatelessWidget {  final double? width;  final double? height;  final double? bottomHeight;  const ProfileWidget({Key? key, this.height, this.bottomHeight, this.width})      : super(key: key);  @override  Widget build(BuildContext context) {    final choosePeriodCubit = getItInstance<ChooseTimePeriodCubit>();    return Padding(      padding: EdgeInsets.only(          bottom: MediaQuery.of(context).size.width > 950 ? 30.0 : 0),      child: CustomProfileCard(        width: width,        height: height,        bottomHeight: bottomHeight,        child: MediaQuery.of(context).size.width > 950            ? Padding(                padding: const EdgeInsets.only(top: 30.0, left: 30.0),                child: Column(                  mainAxisAlignment: MainAxisAlignment.start,                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    Container(                      width: 65,                      height: 65,                      margin: const EdgeInsets.only(bottom: 30),                      decoration: BoxDecoration(                          border: Border.all(color: Colors.white, width: 2),                          borderRadius:                              const BorderRadius.all(Radius.circular(50))),                      child: Image.asset(                        'assets/pngs/image-jeremy.png',                      ),                    ),                    const SizedBox(width: 20),                    Column(                      crossAxisAlignment: CrossAxisAlignment.start,                      mainAxisAlignment: MainAxisAlignment.center,                      children: [                        const Text(                          'Report for',                          style: CustomThemes.subTitleStyle,                        ),                        const SizedBox(height: 4),                        Text(                          'Jremy Robson',                          style: CustomThemes.cardTitleStyle                              .copyWith(fontSize: 36),                        ),                      ],                    )                  ],                ),              )            : Row(                mainAxisAlignment: MainAxisAlignment.center,                children: [                  Container(                    width: 65,                    height: 65,                    decoration: BoxDecoration(                        border: Border.all(color: Colors.white, width: 2),                        borderRadius:                            const BorderRadius.all(Radius.circular(50))),                    child: Image.asset(                      'assets/pngs/image-jeremy.png',                    ),                  ),                  const SizedBox(width: 20),                  Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    mainAxisAlignment: MainAxisAlignment.center,                    children: const [                      Text(                        'Report for',                        style: CustomThemes.subTitleStyle,                      ),                      SizedBox(height: 4),                      Text(                        'Jremy Robson',                        style: CustomThemes.cardTitleStyle,                      ),                    ],                  )                ],              ),        bottomChild: Padding(          padding: const EdgeInsets.only(bottom: 14.0),          child: BlocBuilder<ChooseTimePeriodCubit, int>(            bloc: choosePeriodCubit,            builder: (context, tabNumber) {              return MediaQuery.of(context).size.width > 950                  ? Column(                      mainAxisAlignment: MainAxisAlignment.end,                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        PeriodTabItemWidget(                          title: 'Daily',                          isActive: tabNumber == 0,                          onTab: () {                            choosePeriodCubit.choosePeriod(0);                          },                        ),                        PeriodTabItemWidget(                          title: 'Weekly',                          isActive: tabNumber == 1,                          onTab: () {                            choosePeriodCubit.choosePeriod(1);                          },                        ),                        PeriodTabItemWidget(                          title: 'Monthly',                          isActive: tabNumber == 2,                          onTab: () {                            choosePeriodCubit.choosePeriod(2);                          },                        ),                      ],                    )                  : Row(                      crossAxisAlignment: CrossAxisAlignment.end,                      children: [                        PeriodTabItemWidget(                          title: 'Daily',                          isActive: tabNumber == 0,                          onTab: () {                            choosePeriodCubit.choosePeriod(0);                          },                        ),                        PeriodTabItemWidget(                          title: 'Weekly',                          isActive: tabNumber == 1,                          onTab: () {                            choosePeriodCubit.choosePeriod(1);                          },                        ),                        PeriodTabItemWidget(                          title: 'Monthly',                          isActive: tabNumber == 2,                          onTab: () {                            choosePeriodCubit.choosePeriod(2);                          },                        ),                      ],                    );            },          ),        ),      ),    );  }}