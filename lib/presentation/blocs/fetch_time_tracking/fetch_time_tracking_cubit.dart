import 'package:bloc/bloc.dart';import 'package:meta/meta.dart';import 'package:time_tracking_dashboard/domain/entities/app_error.dart';import 'package:time_tracking_dashboard/domain/entities/no_params.dart';import 'package:time_tracking_dashboard/domain/entities/time_tracking_entity.dart';import 'package:time_tracking_dashboard/domain/usecases/fetch_time_tracking_data.dart';part 'fetch_time_tracking_state.dart';class FetchTimeTrackingCubit extends Cubit<FetchTimeTrackingState> {  FetchTimeTrackingData fetchTimeTrackingData;  FetchTimeTrackingCubit({required this.fetchTimeTrackingData})      : super(FetchTimeTrackingInitial());  fetchTimesData() async {    emit(FetchTimeTrackingLoading());    final data = await fetchTimeTrackingData.call(NoParams());    data.fold((failure) {      String msg = convertFailureToStringMessage(error: failure);      emit(FetchTimeTrackingError(message: msg));    }, (timesData) {      emit(FetchTimeTrackingSuccessfully(times: timesData));    });  }}convertFailureToStringMessage({required AppError error}) {  String message = '';  if (error.appErrorType == AppErrorType.network) {    message =        "There is a problem in internet connection, please connect your device to the internet and try again";  } else if (error.appErrorType == AppErrorType.api) {    message = "There is a problem in the server";  }  return message;}