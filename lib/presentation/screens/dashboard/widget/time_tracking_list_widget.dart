import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:time_tracking_dashboard/di/git_it.dart';import 'package:time_tracking_dashboard/presentation/blocs/fetch_time_tracking/fetch_time_tracking_cubit.dart';import 'package:time_tracking_dashboard/presentation/screens/dashboard/widget/time_tracking_list_item_widget.dart';import 'package:time_tracking_dashboard/presentation/themes/custom_colors.dart';import 'package:time_tracking_dashboard/presentation/themes/custom_themes.dart';class TimeTrackingListWidget extends StatelessWidget {  const TimeTrackingListWidget({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    final fetchTimeCubit = getItInstance<FetchTimeTrackingCubit>();    return BlocBuilder<FetchTimeTrackingCubit, FetchTimeTrackingState>(      builder: (context, state) {        return state is FetchTimeTrackingSuccessfully            ? Wrap(                spacing: 30.0,                verticalDirection: VerticalDirection.down,                children: [                  for (int i = 0; i < state.times.length; i++)                    TimeTrackingListItemWidget(                        title: state.times[i].title ?? '',                        timeFrame: state.times[i].timeFrameEntity)                ],              )            : state is FetchTimeTrackingLoading                ? const Center(                    child: CircularProgressIndicator(                      color: CustomColors.blueColor,                    ),                  )                : state is FetchTimeTrackingError                    ? Column(                        mainAxisAlignment: MainAxisAlignment.center,                        children: [                          Text(                            state.message,                            style: CustomThemes.subTitleStyle,                          ),                          const SizedBox(height: 10),                          GestureDetector(                            onTap: () {                              fetchTimeCubit.fetchTimesData();                            },                            child: const Icon(                              Icons.replay,                              size: 40,                              color: CustomColors.blueColor,                            ),                          )                        ],                      )                    : const SizedBox();      },    );  }}